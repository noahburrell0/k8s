apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cmd-params-cm
data:
  server.enable.gzip: "true"
  application.namespaces: "argocd"

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cm
data:
  timeout.reconciliation: 60s
  exec.enabled: "true"
  exec.shells: "bash,sh,powershell,cmd,dash,ash,ksh"
  statusbadge.enabled: "true"
  resource.customizations.health.bitnami.com_SealedSecret: |
    hs = {}
    hs.status = "Healthy"
    hs.message = "Controller doesn't report resource status"
    return hs
  url: "https://argocd.k8s.burrell.tech"
  dex.config: |
    connectors:
    - type: ldap
      name: burrell.tech
      id: ad
      config:
        host: ad.burrell.tech:389
        insecureNoSSL: true
        insecureSkipVerify: true
        bindDN: "$argocd-ldap-secret:dex.ldap.bindDN"
        bindPW: "$argocd-ldap-secret:dex.ldap.bindPW"
        usernamePrompt: Username
        userSearch:
          baseDN: "CN=Users,DC=burrell,DC=tech"
          filter: ""
          username: sAMAccountName
          idAttr: distinguishedName
          emailAttr: mail
          nameAttr: displayName
        groupSearch:
          baseDN: "CN=Users,DC=burrell,DC=tech"
          filter: ""
          userAttr: distinguishedName
          groupAttr: member
          nameAttr: name
---

apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: argocd-rbac-cm
    app.kubernetes.io/part-of: argocd
  name: argocd-rbac-cm
  namespace: argocd
data:
  policy.default: role:none
  scopes: '[groups, email]'
  policy.csv: |
    p, role:get-repos, repositories, get, *, allow
    g, ArgoCD, role:admin

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-notifications-cm
  namespace: argocd
data:
  # Basic Setup
  service.alertmanager: |
    targets:
    - prom-stack-kube-prometheus-alertmanager.kube-prometheus-stack:9093
  context: |
    argocdUrl: https://argocd.k8s.burrell.tech
  subscriptions: |
    - recipients:
      - alertmanager
      triggers:
        - on-deployed
        - on-health-degraded
        - on-sync-failed
        - on-sync-running
        - on-sync-status-unknown
        - on-sync-status-outofsync
        - on-sync-succeeded

  # Notification Triggers
  trigger.on-deployed: |
    - when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status == 'Healthy'
      description: Application is synced and healthy. Triggered once per commit.
      send: [app-deployed]
      oncePer: app.status.operationState.syncResult.revision
  # trigger.on-health-degraded: |
  #   - when: app.status.health.status == 'Degraded'
  #     description: Application has degraded
  #     send: [app-health-degraded]
  # trigger.on-sync-failed: |
  #   - when: app.status.operationState.phase in ['Error', 'Failed']
  #     description: Application syncing has failed
  #     send: [app-sync-failed]
  # trigger.on-sync-running: |
  #   - when: app.status.operationState.phase in ['Running']
  #     description: Application is being synced
  #     send: [app-sync-running]
  # trigger.on-sync-status-unknown: |
  #   - when: app.status.sync.status == 'Unknown'
  #     description: Application status is 'Unknown'
  #     send: [app-sync-status-unknown]
  # trigger.on-sync-status-outofsync: |
  #   - when: app.status.sync.status == 'OutOfSync'
  #     description: Application status is 'OutOfSync'
  #     send: [app-sync-status-outofsync]
  # trigger.on-sync-succeeded: |
  #   - when: app.status.operationState.phase in ['Succeeded']
  #     description: Application syncing has succeeded
  #     send: [app-sync-succeeded]

  # Notification Templates
  template.app-deployed: |
    message: Application {{.app.metadata.name}} has been healthy.
    alertmanager:
      labels:
        fault_priority: "P5"
        event_bucket: "deploy"
        event_status: "succeed"
        recipient: "{{.recipient}}"
      annotations:
        application: '<a href="{{.context.argocdUrl}}/applications/{{.app.metadata.name}}">{{.app.metadata.name}}</a>'

  # template.app-health-degraded: |
  #   message: |
  #       {{if eq .serviceType "slack"}}:exclamation:{{end}} Application {{.app.metadata.name}} has degraded.
  #       Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.
  #   alertmanager:
  #     labels:
  #       alertname: app-health-degraded
  #       fault_priority: "P5"
  #       event_bucket: "deploy"

  # template.app-sync-failed: |
  #   message: |
  #       {{if eq .serviceType "slack"}}:exclamation:{{end}}  The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}
  #       Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .
  #   alertmanager:
  #     labels:
  #       alertname: app-sync-failed
  #       fault_priority: "P5"
  #       event_bucket: "deploy"

  # template.app-sync-running: |
  #   message: |
  #       The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.
  #       Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .
  #   alertmanager:
  #     labels:
  #       alertname: app-sync-running
  #       fault_priority: "P5"
  #       event_bucket: "deploy"

  # template.app-sync-status-unknown: |
  #   message: |
  #       {{if eq .serviceType "slack"}}:exclamation:{{end}} Application {{.app.metadata.name}} sync is 'Unknown'.
  #       Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.
  #       {{if ne .serviceType "slack"}}
  #       {{range $c := .app.status.conditions}}
  #           * {{$c.message}}
  #       {{end}}
  #       {{end}}
  #   alertmanager:
  #     labels:
  #       alertname: app-sync-status-unknown
  #       fault_priority: "P5"
  #       event_bucket: "deploy"

  # template.app-sync-status-outofsync: |
  #   message: |
  #       {{if eq .serviceType "slack"}}:warning:{{end}} Application {{.app.metadata.name}} sync is 'OutOfSync'.
  #       Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.
  #       {{if ne .serviceType "slack"}}
  #       {{range $c := .app.status.conditions}}
  #           * {{$c.message}}
  #       {{end}}
  #       {{end}}
  #   alertmanager:
  #     labels:
  #       alertname: app-sync-status-outofsync
  #       fault_priority: "P5"
  #       event_bucket: "deploy"

  # template.app-sync-succeeded: |
  #   message: |
  #       {{if eq .serviceType "slack"}}:white_check_mark:{{end}} Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.
  #       Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true
  #   alertmanager:
  #     labels:
  #       alertname: app-sync-succeeded
  #       fault_priority: "P5"
  #       event_bucket: "deploy"
