# Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    nginx.ingress.kubernetes.io/proxy-body-size: 40m
    external-dns.alpha.kubernetes.io/target: 'burrell.tech'
    external-dns.alpha.kubernetes.io/cloudflare-proxied: 'true'
  name: wordpress-ingress
spec:
  rules:
    - host: blog.frontenac.tech
      http:
        paths:
          - backend:
              service:
                name: wordpress-svc
                port:
                  name: http
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - blog.frontenac.tech
      secretName: blog.frontenac.tech-tls

---

# Service
apiVersion: v1
kind: Service
metadata:
  name: wordpress-svc
spec:
  selector:
    app.kubernetes.io/instance: wordpress
    app.kubernetes.io/name: fts-wordpress
  type: ClusterIP
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80

---

# PVC
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: wordpress-pvc
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: nfs
  resources:
    requests:
      storage: 100Gi

---

# Configmap - Wordpress Options
apiVersion: v1
kind: ConfigMap
metadata:
  name: wordpress-custom-options
data:
  uploads.ini: |
    file_uploads = On
    memory_limit 128M
    upload_max_filesize 64M
    post_max_size 64M
    max_execution_time 300
    max_input_time 300
  WORDPRESS_CONFIG_EXTRA: |
    define('WP_MEMORY_LIMIT', '64M');
    @ini_set( 'upload_max_size', '64M' );
    @ini_set( 'post_max_size', '64M');
    @ini_set( 'max_execution_time', '300' );

---

# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fts-wordpress
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: wordpress
      app.kubernetes.io/name: fts-wordpress
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: wordpress
        app.kubernetes.io/name: fts-wordpress
    spec:
      containers:
      - image: wordpress:5.9.2-php8.1-apache
        name: wordpress
        env:
        - name: WORDPRESS_DB_HOST
          value: wordpress-cluster-mysql-master
        - name: WORDPRESS_DB_NAME
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: DATABASE
        - name: WORDPRESS_DB_USER
          value: root
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: ROOT_PASSWORD
        envFrom:
        - configMapRef:
            name: wordpress-custom-options
        ports:
        - containerPort: 80
          name: http
        resources:
          limits:
            cpu: 750m
            memory: "750Mi"
          requests:
            memory: "100Mi"
            cpu: "120m"
        readinessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 300
          periodSeconds: 5
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 300
          periodSeconds: 5
        volumeMounts:
        - name: wordpress-persistent-storage
          mountPath: /var/www/html
        - name: wordpress-custom
          mountPath: /usr/local/etc/php/conf.d/uploads.ini
          subPath: uploads.ini
      volumes:
      - name: wordpress-persistent-storage
        persistentVolumeClaim:
          claimName: wordpress-pvc
      - name: wordpress-custom
        configMap:
          name: wordpress-custom-options
          items:
          - key: "uploads.ini"
            path: "uploads.ini"