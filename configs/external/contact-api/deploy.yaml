apiVersion: v1
kind: ConfigMap
metadata:
  name: contact-api-cm
data:
  SUBJECT_PREAMBLE: "[NEW WEBSITE MSG]"
  FROM_ADDRESS: "contact@burrell.tech"
  TO_ADDRESS: noah@burrell.tech
  SMTP_SERVER: smtp.smtp

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: contact-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: contact-api
      app.kubernetes.io/name: contact-api
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: contact-api
        app.kubernetes.io/name: contact-api
    spec:
      automountServiceAccountToken: true
      containers:
        - image: 'ghcr.io/noahburrell0/contact-api:v0.1.1'
          imagePullPolicy: IfNotPresent
          name: contact-api
          ports:
            - containerPort: 5000
              name: contact-api
              protocol: TCP
          envFrom:
            - configMapRef:
                name: contact-api-cm
---

apiVersion: v1
kind: Service
metadata:
  name: contact-api
spec:
  selector:
    app.kubernetes.io/instance: contact-api
    app.kubernetes.io/name: contact-api
  ports:
  - name: http
    port: 5000

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: contact-api-ingress
  annotations:
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: letsencrypt
    external-dns.alpha.kubernetes.io/target: 'burrell.tech'
    external-dns.alpha.kubernetes.io/cloudflare-proxied: 'true'
    # Temporary CORS enabled
    nginx.ingress.kubernetes.io/cors-allow-methods: POST
    nginx.ingress.kubernetes.io/cors-allow-origin: 'http://localhost,http://192.168.1.2'
    nginx.ingress.kubernetes.io/enable-cors: 'true'

spec:
  ingressClassName: nginx
  rules:
  - host: api.burrell.tech
    http:
      paths:
      - path: /contact
        pathType: Exact
        backend:
          service:
            name: contact-api
            port: 
              name: http
  tls:
  - hosts:
    - api.burrell.tech
    secretName: api.burrell.tech-tls